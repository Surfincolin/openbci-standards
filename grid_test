#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Oct  8 15:13:32 2021

@author: colinwageman
"""

import math
import numpy as np

b_size = [400,400]
position=[0,0]

chars = [chr(x) for x in range(65,91)]
numbers = list(range(1,10))
space = ['_']
  
# TODO: clean this up, breaks if there isn't a perfect square root of full_list
full_list = chars + numbers + space
dim = math.ceil(len(full_list)**0.5)
character_grid = np.reshape(full_list, (dim, dim))
  
ch_ctrl = []
ch_ctrl_mat = []

ltr_size = 50
w_adj = b_size[0]-ltr_size
h_adj = b_size[1]-ltr_size
h_spacing = w_adj/(dim-1)
v_spacing = h_adj/(dim-1)
placement = [-w_adj/2 + position[0], h_adj/2 + position[1]]
for row in character_grid:
	r_container = []
	for ch in row:
		l = (ch)
		ch_ctrl.append(l)
		r_container.append(l)
		placement = [placement[0] + h_spacing, placement[1]]

	ch_ctrl_mat.append(r_container)
	placement = [-w_adj/2  + position[0], placement[1] - v_spacing]

# create a list of row and columns for simple indexing 0-12
ch_ctrl_mat = np.array(ch_ctrl_mat)
ch_ctrl_2 = [ch_ctrl_mat[r,:] for r in range(dim)] + [ch_ctrl_mat[:,c] for c in range(dim)]
del ch_ctrl_mat